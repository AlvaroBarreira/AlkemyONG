{"version":3,"sources":["Components/Contact/FormContact.js"],"names":["FormContact","id","history","useHistory","formik","useFormik","initialValues","name","email","phone","message","validate","values","errors","length","emailRegex","test","isNaN","onSubmit","handleSubmitContact","showErrorMessage","errorMessage","Alert","severity","a","Swal","fire","push","className","Box","noValidate","component","handleSubmit","Paper","elevation","sx","display","flexDirection","padding","gap","Typography","variant","TextField","autoComplete","placeholder","type","value","onChange","handleChange","Button","width","xs","sm"],"mappings":"uRA6KeA,UAvJK,SAAC,GAAW,EAATC,GAAU,IACzBC,EAAUC,cA6BVC,EAASC,YAAU,CACvBC,cAAe,CACbC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPC,QAAS,IAEXC,SAlCe,SAACC,GAChB,IAAMC,EAAS,GAuBf,OArBKD,EAAOL,KAEDK,EAAOL,KAAKO,OAAS,IAC9BD,EAAON,KAAO,iDAFdM,EAAON,KAAO,yBAIXK,EAAOJ,MAEAO,IAAWC,KAAKJ,EAAOJ,SACjCK,EAAOL,MAAQ,0BAFfK,EAAOL,MAAQ,iCAIZI,EAAOH,MAEDQ,MAAML,EAAOH,OACtBI,EAAOJ,MAAQ,0BACNG,EAAOH,MAAMK,OAAS,IAC/BD,EAAOJ,MAAQ,iDAJfI,EAAOJ,MAAQ,2BAMZG,EAAOF,UACVG,EAAOH,QAAU,2BAGZG,GAWPK,SAAU,SAACN,GAAD,OAAYO,EAAoBP,MAGtCQ,EAAmB,SAACC,GACxB,OAAO,eAACC,EAAA,EAAD,CAAOC,SAAS,UAAhB,cAA4BF,EAA5B,QAWHF,EAAmB,uCAAG,sBAAAK,EAAA,uDAEb,CACXjB,KAAMH,EAAOQ,OAAOL,KACpBC,MAAOJ,EAAOQ,OAAOJ,MACrBC,MAAOL,EAAOQ,OAAOH,MACrBC,QAASN,EAAOQ,OAAOF,UAGzBe,IAAKC,KAAK,UAAW,mBAAoB,WACzCxB,EAAQyB,KAAK,KAVa,2CAAH,qDAgBzB,OACE,qBAAKC,UAAU,OAAf,SACE,cAACC,EAAA,EAAD,CACEC,YAAU,EACVF,UAAU,iBACVG,UAAU,OACVb,SAAUd,EAAO4B,aAJnB,SAKE,eAACC,EAAA,EAAD,CACEC,UAAW,EACXC,GAAI,CACFC,QAAS,OACTC,cAAe,SACfC,QAAS,OACTC,IAAK,QANT,UAQE,cAACC,EAAA,EAAD,CAAYT,UAAU,MAAMU,QAAQ,KAApC,oBAGA,cAACC,EAAA,EAAD,CACEC,aAAa,MACbpC,KAAK,OACLqC,YAAY,QACZC,KAAK,OACLC,MAAO1C,EAAOQ,OAAOL,KACrBkC,QAAQ,WACRM,SAAU3C,EAAO4C,eAElB5C,EAAOS,OAAON,MAAQa,EAAiBhB,EAAOS,OAAON,MACtD,cAACiC,EAAA,EAAD,CAAYT,UAAU,MAAMU,QAAQ,KAApC,mBAGA,cAACC,EAAA,EAAD,CACEC,aAAa,MACbpC,KAAK,QACLqC,YAAY,sBACZC,KAAK,QACLC,MAAO1C,EAAOQ,OAAOJ,MACrBiC,QAAQ,WACRM,SAAU3C,EAAO4C,eAElB5C,EAAOS,OAAOL,OAASY,EAAiBhB,EAAOS,OAAOL,OACvD,cAACgC,EAAA,EAAD,CAAYT,UAAU,MAAMU,QAAQ,KAApC,yBAGA,cAACC,EAAA,EAAD,CACEC,aAAa,MACbpC,KAAK,QACLqC,YAAY,YACZC,KAAK,OACLC,MAAO1C,EAAOQ,OAAOH,MACrBgC,QAAQ,WACRM,SAAU3C,EAAO4C,eAElB5C,EAAOS,OAAOJ,OAASW,EAAiBhB,EAAOS,OAAOJ,OACvD,cAAC+B,EAAA,EAAD,CAAYT,UAAU,MAAMU,QAAQ,KAApC,qBAGA,cAACC,EAAA,EAAD,CACEC,aAAa,MACbpC,KAAK,UACLqC,YAAY,gCACZC,KAAK,OACLC,MAAO1C,EAAOQ,OAAOF,QACrB+B,QAAQ,WACRM,SAAU3C,EAAO4C,eAElB5C,EAAOS,OAAOH,SAAWU,EAAiBhB,EAAOS,OAAOH,SACzD,cAACuC,EAAA,EAAD,CACErB,UAAU,aACVO,GAAI,CACFe,MAAO,CAAEC,GAAI,OAAQC,GAAI,UAE3BP,KAAK,SACLJ,QAAQ,YANV","file":"static/js/17.5059dee0.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport { emailRegex } from '../../Utils';\r\nimport {\r\n  TextField,\r\n  Box,\r\n  Button,\r\n  Alert,\r\n  Typography,\r\n  Paper,\r\n} from '@mui/material';\r\nimport '../../Styles/FormStyles.css';\r\nimport {\r\n  sendContactData,\r\n  editContactData,\r\n} from '../../Services/contactsService';\r\nimport '../../Styles/CategoriesFormStyles.css';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst FormContact = ({ id }) => {\r\n  const history = useHistory();\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n\r\n    if (!values.name) {\r\n      errors.name = 'El nombre es requerido';\r\n    } else if (values.name.length < 4) {\r\n      errors.name = 'El nombre debe contener al menos 4 caracteres';\r\n    }\r\n    if (!values.email) {\r\n      errors.email = 'La descripción es requerida';\r\n    } else if (!emailRegex.test(values.email)) {\r\n      errors.email = 'Tiene que ser un Email';\r\n    }\r\n    if (!values.phone) {\r\n      errors.phone = 'El telefono es requerido';\r\n    } else if (isNaN(values.phone)) {\r\n      errors.phone = 'Tiene que ser un numero';\r\n    } else if (values.phone.length < 8) {\r\n      errors.phone = 'El numero debe contener al menos 8 caracteres';\r\n    }\r\n    if (!values.message) {\r\n      errors.message = 'El mensaje es requerido';\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      message: '',\r\n    },\r\n    validate,\r\n    onSubmit: (values) => handleSubmitContact(values),\r\n  });\r\n\r\n  const showErrorMessage = (errorMessage) => {\r\n    return <Alert severity=\"warning\"> {errorMessage} </Alert>;\r\n  };\r\n\r\n  const createOrUpdateContactData = (id, body) => {\r\n    if (!id) {\r\n      sendContactData(body);\r\n    } else {\r\n      editContactData(id, body);\r\n    }\r\n  };\r\n\r\n  const handleSubmitContact = async () => {\r\n    // eslint-disable-next-line no-unused-vars\r\n    const body = {\r\n      name: formik.values.name,\r\n      email: formik.values.email,\r\n      phone: formik.values.phone,\r\n      message: formik.values.message,\r\n    };\r\n\r\n    Swal.fire('Gracias', 'por contactarnos', 'success');\r\n    history.push('/');\r\n    // createOrUpdateContactData(id, body).then((resp) =>\r\n    //   setApiResponse(resp.data),\r\n    // );\r\n  };\r\n\r\n  return (\r\n    <div className=\"bckg\">\r\n      <Box\r\n        noValidate\r\n        className=\"form-container\"\r\n        component=\"form\"\r\n        onSubmit={formik.handleSubmit}>\r\n        <Paper\r\n          elevation={3}\r\n          sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            padding: '3rem',\r\n            gap: '2rem',\r\n          }}>\r\n          <Typography component=\"div\" variant=\"h5\">\r\n            Nombre\r\n          </Typography>\r\n          <TextField\r\n            autoComplete=\"off\"\r\n            name=\"name\"\r\n            placeholder=\"Dante\"\r\n            type=\"text\"\r\n            value={formik.values.name}\r\n            variant=\"outlined\"\r\n            onChange={formik.handleChange}\r\n          />\r\n          {formik.errors.name && showErrorMessage(formik.errors.name)}\r\n          <Typography component=\"div\" variant=\"h5\">\r\n            Email\r\n          </Typography>\r\n          <TextField\r\n            autoComplete=\"off\"\r\n            name=\"email\"\r\n            placeholder=\"ejemplo@ejemplo.com\"\r\n            type=\"email\"\r\n            value={formik.values.email}\r\n            variant=\"outlined\"\r\n            onChange={formik.handleChange}\r\n          />\r\n          {formik.errors.email && showErrorMessage(formik.errors.email)}\r\n          <Typography component=\"div\" variant=\"h5\">\r\n            Teléfono\r\n          </Typography>\r\n          <TextField\r\n            autoComplete=\"off\"\r\n            name=\"phone\"\r\n            placeholder=\"1234-5678\"\r\n            type=\"text\"\r\n            value={formik.values.phone}\r\n            variant=\"outlined\"\r\n            onChange={formik.handleChange}\r\n          />\r\n          {formik.errors.phone && showErrorMessage(formik.errors.phone)}\r\n          <Typography component=\"div\" variant=\"h5\">\r\n            Mensaje\r\n          </Typography>\r\n          <TextField\r\n            autoComplete=\"off\"\r\n            name=\"message\"\r\n            placeholder=\"Escriba su mensaje aquí...\"\r\n            type=\"text\"\r\n            value={formik.values.message}\r\n            variant=\"outlined\"\r\n            onChange={formik.handleChange}\r\n          />\r\n          {formik.errors.message && showErrorMessage(formik.errors.message)}\r\n          <Button\r\n            className=\"submit-btn\"\r\n            sx={{\r\n              width: { xs: '100%', sm: '200px' },\r\n            }}\r\n            type=\"submit\"\r\n            variant=\"contained\">\r\n            Enviar\r\n          </Button>\r\n        </Paper>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormContact;\r\n"],"sourceRoot":""}